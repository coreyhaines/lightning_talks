Go through discussion about where to start!

Talks index

Go to URL
- build route
- build controller
- build action
- build view

Show talks
- add iteration to view
- add empty array as list of @talks to controller
- add seed file with some talks
- change empty array to Talk.all

Decision point: What next?
- Submit a talk
- Vote on a talk

Which adds value?
Submit a talk - is there an alternate way to do it?
Vote on a talk - direct feature making application more useful

Which feature would allow us to get closer to using the application?
Vote on a talk

Start with display of vote count
- add to view
- create a migration to add it
rails g migration add_vote_count_to_talk vote_count:integer
make default = 0
- add to seed file
vote_count: rand(10)

- Catch mass-assignment issue
- Also need to flush talks at top of seed file

Casting a vote
- add a "LIKE" link to the view
  - emphasize that we are 'creating' a vote
- build a Votes controller
- build create action
- redirect back to index
  - But this doesn't add a vote
- add controller code to add a vote to the talk (talk.add_vote!)
- add model method
  - This still doesn't increment vote
- add code in method to increment vote_count
  - update_attribute :vote, self.vote + 1

Discuss why not do update_attribute from controller
  - hide mechanics of "voting" from controller
  - encapsulate this knowledge inside the model
  - controller doesn't need knowledge of database




